{
  "tasks": [
    {
      "id": "bun_native_backend_server",
      "description": "[ ] Investigate Backend Server: Check `bun-backend`'s HTTP server implementation.",
      "completed": false,
      "subtasks": [
        { "id": "sub_backend_server_check", "description": "[ ] Identify current HTTP server mechanism (Node `http`, Express, Koa, etc.) in `bun-backend/index.ts` and `routes/`.", "completed": false },
        { "id": "sub_backend_server_evaluate", "description": "[ ] Evaluate feasibility and performance benefits of switching to `Bun.serve()` or a Bun-first framework (e.g., ElysiaJS, Hono).", "completed": false },
        { "id": "sub_backend_server_implement", "description": "[ ] (Optional) Implement the switch if beneficial.", "completed": false }
      ]
    },
    {
      "id": "bun_native_fs",
      "description": "[ ] Audit File System Usage: Replace Node `fs` with Bun's native FS APIs where appropriate.",
      "completed": false,
      "subtasks": [
        { "id": "sub_fs_search", "description": "[ ] Search for `require('fs')` or `import fs from 'fs'` in `bun-backend`.", "completed": false },
        { "id": "sub_fs_identify", "description": "[ ] Identify specific `fs` functions being used (e.g., `readFile`, `writeFile`).", "completed": false },
        { "id": "sub_fs_replace", "description": "[ ] Replace with equivalent `Bun.file().text()`, `Bun.write()`, etc., and benchmark if necessary.", "completed": false }
      ]
    },
    {
      "id": "bun_native_test_runner",
      "description": "[ ] Evaluate `bun test` Runner: Compare with existing test runners.",
      "completed": false,
      "subtasks": [
        { "id": "sub_test_backend_current", "description": "[ ] Identify current backend unit/integration test runner (if not Playwright).", "completed": false },
        { "id": "sub_test_backend_compare", "description": "[ ] Compare features and speed with `bun test`.", "completed": false },
        { "id": "sub_test_backend_migrate", "description": "[ ] (Optional) Migrate backend tests to `bun test` if advantageous.", "completed": false },
        { "id": "sub_test_frontend_compare", "description": "[ ] Compare Vitest features and speed in `frontend` with `bun test`.", "completed": false },
        { "id": "sub_test_frontend_migrate", "description": "[ ] (Optional) Migrate frontend tests from Vitest to `bun test` if advantageous.", "completed": false }
      ]
    },
    {
      "id": "bun_native_shell",
      "description": "[ ] Simplify Scripts with `Bun Shell`: Refactor complex `package.json` scripts.",
      "completed": false,
      "subtasks": [
        { "id": "sub_shell_review_backend", "description": "[ ] Review scripts in `bun-backend/package.json`.", "completed": false },
        { "id": "sub_shell_review_frontend", "description": "[ ] Review scripts in `frontend/package.json`.", "completed": false },
        { "id": "sub_shell_identify", "description": "[ ] Identify complex shell logic suitable for `Bun Shell`.", "completed": false },
        { "id": "sub_shell_refactor", "description": "[ ] Refactor identified scripts into `.ts` or `.js` files using `Bun Shell` syntax.", "completed": false }
      ]
    }
  ]
}
